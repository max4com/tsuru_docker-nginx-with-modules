name: nightly
on:
  schedule:
      - cron: '0 0 * * *'
jobs:
  test:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - nginx: 1.24.0
            nginx_tag: stable
            flavor: max4com
            experimental: false
          - nginx: 1.24.0-perl
            nginx_tag: stable-perl
            flavor: max4com
            experimental: false 
          - nginx: 1.22.1
            nginx_tag: 1.22.1
            flavor: max4com_bp_1.22
            experimental: false
          - nginx: 1.22.1-perl
            nginx_tag: 1.22.1-perl
            flavor: max4com_bp_1.22
            experimental: false
          - nginx: 1.21.4
            nginx_tag: 1.21.4
            flavor: max4com_full_bp_1.21
            experimental: false
          - nginx: 1.21.4-perl
            nginx_tag: 1.21.4-perl
            flavor: max4com_full_bp_1.21
            experimental: false
    steps:
    - uses: actions/checkout@v3
    - uses: docker/setup-qemu-action@v2
    - uses: docker/setup-buildx-action@v2
    - uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.run_number }}-${{ matrix.nginx }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-${{ github.run_number }}-${{ matrix.nginx }}-
    - uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - run: |
        echo EXT_MODSECURITY_VERSION=$(jq -er '.flavors[] | select(.name == "${{ matrix.flavor }}") | .modsecurity_version' flavors.json) >> $GITHUB_ENV
        echo EXT_OWASP_MODSECURITY_CRS_VERSION=$(jq -er '.flavors[] | select(.name == "${{ matrix.flavor }}") | .owasp_modsecurity_crs_version' flavors.json) >> $GITHUB_ENV
        echo EXT_OPENRESTY_PACKAGE_VERSION=$(jq -er '.flavors[] | select(.name == "${{ matrix.flavor }}") | .openresty_package_version' flavors.json) >> $GITHUB_ENV
        echo EXT_LUAROCKS_VERSION=$(jq -er '.flavors[] | select(.name == "${{ matrix.flavor }}") | .luarocks_version' flavors.json) >> $GITHUB_ENV
        echo EXT_PAGESPEED_NGX_VERSION=$(jq -er '.flavors[] | select(.name == "${{ matrix.flavor }}") | .pagespeed_ngx_version' flavors.json) >> $GITHUB_ENV
        echo MODULES=$(jq -er '.flavors[] | select(.name == "${{ matrix.flavor }}") | .modules | join(",")' flavors.json) >> $GITHUB_ENV
        echo LUA_MODULES=$(jq -er '.flavors[] | select(.name == "${{ matrix.flavor }}") | [ .lua_modules[]? ] | join(",")' flavors.json) >> $GITHUB_ENV
    - uses: docker/build-push-action@v3
      with:
        load: true
        tags: max4com/nginx-pre-labels-${{ matrix.flavor }}:${{ matrix.nginx }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        build-args: |
          nginx_version=${{ matrix.nginx }}
          nginx_tag=${{ matrix.nginx_tag }}
          modsecurity_version=${{ env.EXT_MODSECURITY_VERSION }}
          owasp_modsecurity_crs_version=${{ env.EXT_OWASP_MODSECURITY_CRS_VERSION }}
          openresty_package_version=${{ env.EXT_OPENRESTY_PACKAGE_VERSION }}
          luarocks_version=${{ env.EXT_LUAROCKS_VERSION }}
          pagespeed_ngx_version=${{ env.EXT_PAGESPEED_NGX_VERSION }}
          modules=${{ env.MODULES }}
          lua_modules=${{ env.LUA_MODULES }}
    - run: make test flavor=${{ matrix.flavor }} nginx_version=${{ matrix.nginx }}
    - run: echo NGINX_VERSION=${{ matrix.nginx }} >> $GITHUB_ENV
    - run: echo PUSH_TAG=max4com/nginx:${{ matrix.nginx_tag }} >> $GITHUB_ENV
    - run: echo MODULE_NAMES=$(docker run --rm max4com/nginx-pre-labels-${{ matrix.flavor }}:${{ matrix.nginx }} sh -c 'ls /etc/nginx/modules/*.so | grep -v debug | xargs -I{} basename {} .so | paste -sd "," -') >> $GITHUB_ENV
    - uses: docker/build-push-action@v3
      if: github.event_name != 'pull_request'
      with:
        push: true
        tags: ${{ env.PUSH_TAG }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        labels: io.max4com.${{ env.NGINX_VERSION }}.nginx-modules=${{ env.MODULE_NAMES }}
        platforms: linux/amd64
        build-args: |
          nginx_version=${{ matrix.nginx }}
          nginx_tag=${{ matrix.nginx_tag }}
          modsecurity_version=${{ env.EXT_MODSECURITY_VERSION }}
          owasp_modsecurity_crs_version=${{ env.EXT_OWASP_MODSECURITY_CRS_VERSION }}
          openresty_package_version=${{ env.EXT_OPENRESTY_PACKAGE_VERSION }}
          luarocks_version=${{ env.EXT_LUAROCKS_VERSION }}
          pagespeed_ngx_version=${{ env.EXT_PAGESPEED_NGX_VERSION }}
          modules=${{ env.MODULES }}
          lua_modules=${{ env.LUA_MODULES }}
